{"version":3,"sources":["components/TableRow/TableRow.module.css","components/Navbar/Navbar.module.css","pages/ProductCart/ProductCart.module.css","components/MainTable/MainTable.module.css","components/Category/Category.module.css","components/user/Login/Login.module.css","components/user/Register/Register.module.css","components/AddProduct/AddProduct.module.css","components/ViewProduct/ViewProduct.module.css","App.module.css","redux/Products/ProductActions.ts","redux/User/UserActions.ts","types/UserType.tsx","types/ProductType.tsx","redux/Products/ProductReducer.ts","redux/User/UserReducer.ts","redux/RootReducer.ts","redux/store.ts","components/TableRow/index.tsx","components/MainTable/index.tsx","components/Search/index.tsx","components/Category/index.tsx","components/user/Logout/index.tsx","components/user/Login/index.tsx","components/user/Register/index.tsx","components/AddProduct/index.tsx","components/Navbar/index.tsx","pages/Home/index.tsx","Hooks/useProduct.tsx","components/ViewProduct/index.tsx","pages/SingleProduct/index.tsx","components/StartPage/index.tsx","components/CartItem/index.tsx","pages/ProductCart/index.tsx","components/Users/index.tsx","Hooks/useUsers.tsx","pages/Profile/index.tsx","Routes/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","fetchProductRequest","type","FETCH_PRODUCT_REQUEST","fetchProductFailure","error","FETCH_PRODUCT_FAILURE","payload","addProduct","product","ADD_PRODUCT","fetchProducts","dispatch","axios","get","then","response","products","data","FETCH_PRODUCT_SUCCESS","fetchProductSuccess","catch","message","CreateNewProduct","getState","post","tokenConfig","CREATE_PRODUCT","CreateProduct","token","user","config","headers","auth_token","fetchUsersFailure","REMOVE_PRODUCT","initialState","loading","inCart","counter","isValidated","ProductReducers","state","action","find","p","name","index","findIndex","splice","users","isAuthenticated","UserReducer","rootReducer","combineReducers","ProductReducer","temp","localStorage","getItem","persistedState","JSON","parse","store","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","subscribe","setItem","stringify","TableRow","price","img","_id","useDispatch","useSelector","history","useHistory","useEffect","push","Card","raised","color","Image","src","height","Content","className","styles","Header","as","Link","to","Meta","Icon","extra","Button","viewbtn","isAdmin","onClick","MainTable","size","Group","itemsPerRow","stackable","centered","map","key","description","categories","variants","sizes","Search","handleChange","search","Input","icon","placeholder","value","onChange","dropdownlist","Category","handleSelect","cat","Menu","Item","id","onBlur","disabled","length","select","item","Logout","userDetails","firstName","lastName","style","paddingLeft","clear","ErrorText","Login","setLogInOpen","setRegisterOpen","loginOpen","errorMessage","Modal","onClose","onOpen","open","modal","trigger","Grid","textAlign","verticalAlign","Column","maxWidth","initialValues","email","password","validationSchema","yup","required","max","onSubmit","values","resetForm","loginSuccess","window","location","href","fetchLoginFailure","login","handleSubmit","errors","Form","Segment","stacked","fluid","iconPosition","Actions","Message","cursor","textDecoration","Register","registerOpen","username","repeatPassword","min","test","this","parent","UserRegister","Field","label","HeaderStyle","paddingTop","fontSize","AddProduct","useState","setOpen","positive","integer","console","log","Navbar","inverted","fixed","header","position","animated","hidden","visible","Counter","Home","query","setQuery","setCat","setData","sorted","filter","toLowerCase","includes","selected","useProduct","Container","e","currentTarget","ViewProduct","margin","top","card","alt","Description","SingleProduct","useParams","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","minWidth","minHeight","StartPage","text","content","fontWeight","primary","marginTop","CardStyle","display","marginLeft","CartItem","cart","handleRemoveProd","ProductCart","cartProduct","infoText","Users","shoes","useUsers","userData","setUserData","getUserList","Profile","Routes","exact","path","component","App","Boolean","hostname","match","WithProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f93e01f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"TableRow_image__djcQl\",\"Content\":\"TableRow_Content__35ocs\",\"viewbtn\":\"TableRow_viewbtn__3dJwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Navbar_Counter__1x3Fh\",\"header\":\"Navbar_header__73qvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ProductCart_card__3FeXO\",\"infoText\":\"ProductCart_infoText__nHTJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"MainTable_Card__3nytz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Category_select__1dG_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Login_modal__1khUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Register_modal__3aXPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddProduct_modal__X7CLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui\":\"ViewProduct_ui__2bD-E\",\"card\":\"ViewProduct_card__cHeRX\",\"content\":\"ViewProduct_content__1jvXr\",\"extra\":\"ViewProduct_extra__3HMo8\",\"cards\":\"ViewProduct_cards__1ME9G\",\"description\":\"ViewProduct_description__2uK4O\",\"header\":\"ViewProduct_header__3KW0e\",\"meta\":\"ViewProduct_meta__3R4D3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import axios from 'axios'\nimport { Dispatch } from 'redux'\n\nimport {\n  FETCH_PRODUCT_REQUEST,\n  FETCH_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_FAILURE,\n  ProductActions,\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n  CREATE_PRODUCT,\n  BUY_PRODUCT,\n  Product,\n} from '../../types/ProductType'\n\nexport const fetchProductRequest = () => {\n  return {\n    type: FETCH_PRODUCT_REQUEST,\n  }\n}\n\nexport const fetchProductSuccess = (products: Product[]) => {\n  return {\n    type: FETCH_PRODUCT_SUCCESS,\n    payload: products,\n  }\n}\n\nexport const CreateProduct = (product: Product): ProductActions => {\n  return {\n    type: CREATE_PRODUCT,\n    payload: {\n      product,\n    },\n  }\n}\n\nexport const fetchProductFailure = (error: any) => {\n  return {\n    type: FETCH_PRODUCT_FAILURE,\n    payload: error,\n  }\n}\n\nexport const addProduct = (product: Product): ProductActions => {\n  return {\n    type: ADD_PRODUCT,\n    payload: {\n      product,\n    },\n  }\n}\nexport const removeProduct = (product: Product): ProductActions => {\n  return {\n    type: REMOVE_PRODUCT,\n    payload: {\n      product,\n    },\n  }\n}\n\nexport const checkoutProduct = (product: Product): ProductActions => {\n  return {\n    type: BUY_PRODUCT,\n    payload: {\n      product,\n    },\n  }\n}\n\nexport const fetchProducts = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchProductRequest())\n    axios\n      .get('http://localhost:8000/api/v1/products')\n      .then((response) => {\n        const products = response.data\n        dispatch(fetchProductSuccess(products))\n      })\n      .catch((error) => {\n        dispatch(fetchProductFailure(error.message))\n      })\n  }\n}\n\nexport const CreateNewProduct = (product: Product) => {\n  return (dispatch: Dispatch, getState: any) => {\n    dispatch(fetchProductRequest())\n    axios\n      .post(\n        'http://localhost:8000/api/v1/products',\n        product,\n        tokenConfig(getState)\n      )\n      .then((response) => {\n        const products = response.data\n        dispatch(CreateProduct(products))\n      })\n      .catch((error) => {\n        dispatch(fetchProductFailure(error.message))\n      })\n  }\n}\n\nexport const buyProduct = (product: Product) => {\n  return (dispatch: Dispatch, getState: any) => {\n    dispatch(fetchProductRequest())\n    axios\n      .post(\n        'http://localhost:8000/api/v1/user/:userId/checkout, product, tokenConfig'\n      )\n      .then((response) => {\n        const product = response.data\n        dispatch(checkoutProduct(product))\n      })\n      .catch((error) => {\n        dispatch(fetchProductFailure(error.message))\n      })\n  }\n}\n\nexport const tokenConfig = (getState: any) => {\n  const token = getState().user.user.user.token\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n      auth_token: '',\n    },\n  }\n  if (token) {\n    config.headers['auth_token'] = token\n  }\n  return config\n}\n","import axios from 'axios'\nimport { Dispatch } from 'redux'\n\nimport {\n  FETCH_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  FETCH_USER_FAILURE,\n  UserActions,\n  REMOVE_USER,\n  User,\n  LOGIN_USER_SUCCESS,\n  FETCH_LOGIN_FAILURE,\n  LOGOUT,\n  GET_USERS,\n} from '../../types/UserType'\n\nexport const fetchUserRequest = () => {\n  return {\n    type: FETCH_USER_REQUEST,\n  }\n}\n\nexport const fetchUserSuccess = (user: User[]) => {\n  return {\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n  }\n}\n\nexport const fetchUsersFailure = (error: UserActions) => {\n  return {\n    type: FETCH_USER_FAILURE,\n    payload: error,\n  }\n}\n\nexport const fetchLoginFailure = (error: UserActions) => {\n  return {\n    type: FETCH_LOGIN_FAILURE,\n    payload: error,\n  }\n}\n\nexport function logout(): UserActions {\n  return {\n    type: LOGOUT,\n  }\n}\n\nexport const removeUser = (user: User): UserActions => {\n  return {\n    type: REMOVE_USER,\n    payload: {\n      user,\n    },\n  }\n}\n\nexport function loginSuccess(user: User): UserActions {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: {\n      user,\n    },\n  }\n}\n\nexport function getUserList(users: User[]) {\n  return {\n    type: GET_USERS,\n    payload: users,\n  }\n}\n\nexport const UserRegister = ({ firstName, lastName, email, password }: any) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchUserRequest())\n    axios\n      .post('http://localhost:8000/api/v1/user', {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        const users = response.data\n        dispatch(fetchUserSuccess(users))\n        window.location.href = '/home'\n      })\n      .catch((error) => {\n        dispatch(fetchUsersFailure(error.response.data))\n      })\n  }\n}\n\nexport const login = ({ email, password, firstName }: any) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchUserRequest())\n    const user = { email, password, firstName }\n\n    axios\n      .post('http://localhost:8000/api/v1/user/logIn', user)\n      .then((response) => {\n        dispatch(loginSuccess(response.data))\n        localStorage.setItem('user', JSON.stringify(response.data.user))\n        window.location.href = '/Home'\n      })\n      .catch((error) => {\n        dispatch(fetchLoginFailure(error.response.data))\n      })\n  }\n}\n\nexport const getUsers = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchUserRequest())\n    axios\n      .get('http://localhost:8000/api/v1/user')\n      .then((response) => {\n        const users = response.data\n        dispatch(getUserList(users))\n      })\n      .catch((error) => {\n        dispatch(fetchUsersFailure(error.message))\n      })\n  }\n}\n","import { Product } from './ProductType'\n\nexport const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\nexport const ADD_USER = 'ADD_PRODUCT'\nexport const REMOVE_USER = 'REMOVE_USER'\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\nexport const FETCH_LOGIN_FAILURE = 'FETCH_LOGIN_FAILURE'\nexport const LOGOUT = 'LOGOUT'\nexport const GET_USERS = 'GET_USERS'\n\nexport type User = {\n\t_id: string\n\tfirstName: string\n\tlastName: string\n\temail: string\n\tcart: Product[]\n\tisAdmin: boolean\n\tresetLink: string\n}\n\nexport type ReceiveUserAction = {\n\ttype: typeof REGISTER_USER_SUCCESS\n\tpayload: {\n\t\tusers: User[]\n\t}\n}\n\nexport type AddUserAction = {\n\ttype: typeof ADD_USER\n\tpayload: {\n\t\tuser: User\n\t}\n}\nexport type LoginUserSuccessAction = {\n\ttype: typeof LOGIN_USER_SUCCESS\n\tpayload: {\n\t\tuser: User\n\t}\n}\n\nexport type LogoutAction = {\n\ttype: typeof LOGOUT\n}\n\nexport type registerFailure = {\n\ttype: typeof FETCH_USER_FAILURE\n\tpayload: {\n\t\tuser: User\n\t}\n}\n\nexport type getUserList = {\n\ttype: typeof GET_USERS\n\tpayload: {\n\t\tusers: User[]\n\t}\n}\n\nexport type loginFailure = {\n\ttype: typeof FETCH_LOGIN_FAILURE\n\tpayload: {\n\t\tuser: User\n\t}\n}\n\nexport type fetchUserRequest = {\n\ttype: typeof FETCH_USER_REQUEST\n\tloading: boolean\n\tpayload: {\n\t\tuser: User\n\t}\n}\n\nexport type fetchUserSuccess = {\n\ttype: typeof REGISTER_USER_SUCCESS\n\tpayload: {\n\t\tuser: User\n\t}\n}\nexport type RemoveUserAction = {\n\ttype: typeof REMOVE_USER\n\tpayload: {\n\t\tuser: User\n\t}\n}\n\nexport type UserState = {\n\tloading: boolean\n\terror: string | any\n\tuser: User | any\n\tisAuthenticated: boolean\n\tusers: User[]\n\tisValidated: boolean\n}\n\nexport type UserProps = {\n\tuser: User\n}\n\nexport type UserActions =\n\t| ReceiveUserAction\n\t| registerFailure\n\t| fetchUserSuccess\n\t| fetchUserRequest\n\t| AddUserAction\n\t| RemoveUserAction\n\t| LoginUserSuccessAction\n\t| loginFailure\n\t| LogoutAction\n\t| getUserList\n","import { CreateProduct } from '../redux'\n\nexport const FETCH_PRODUCT_REQUEST = 'FETCH_PRODUCT_REQUEST'\nexport const FETCH_PRODUCT_SUCCESS = 'FETCH_PRODUCT_SUCCESS'\nexport const FETCH_PRODUCT_FAILURE = 'FETCH_PRODUCT_FAILURE'\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\nexport const CREATE_PRODUCT = 'CREATE_PRODUCT'\nexport const BUY_PRODUCT = 'BUY_PRODUCT'\n\nexport type Product = {\n\t_id: string\n\tname: string\n\tdescription: string\n\tcategories: string[]\n\tvariants: string[]\n\tsizes: number[]\n\timg: string\n\tprice: number\n}\nexport type MainTableProps = {\n\tproducts: Product\n}\n\nexport type ReceiveProductsAction = {\n\ttype: typeof FETCH_PRODUCT_SUCCESS\n\tpayload: {\n\t\tproducts: Product[]\n\t}\n}\n\nexport type AddProductAction = {\n\ttype: typeof ADD_PRODUCT\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type BuyProductAction = {\n\ttype: typeof BUY_PRODUCT\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type CreateProduct = {\n\ttype: typeof CREATE_PRODUCT\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type fetchProduct = {\n\ttype: typeof FETCH_PRODUCT_FAILURE\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type fetchProductRequest = {\n\ttype: typeof FETCH_PRODUCT_REQUEST\n\tloading: boolean\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type fetchProductSuccess = {\n\ttype: typeof FETCH_PRODUCT_SUCCESS\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\nexport type RemoveProductAction = {\n\ttype: typeof REMOVE_PRODUCT\n\tpayload: {\n\t\tproduct: Product\n\t}\n}\n\nexport type ProductState = {\n\tproducts: Product[]\n\tinCart: Product[]\n\tloading: boolean\n\terror: string\n\tcounter: number\n\tisValidated: boolean\n}\n\nexport type ProductActions =\n\t| ReceiveProductsAction\n\t| fetchProduct\n\t| fetchProductSuccess\n\t| fetchProductRequest\n\t| AddProductAction\n\t| RemoveProductAction\n\t| CreateProduct\n\t| BuyProductAction\n","import {\n  FETCH_PRODUCT_REQUEST,\n  FETCH_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_FAILURE,\n  ProductActions,\n  ADD_PRODUCT,\n  ProductState,\n  REMOVE_PRODUCT,\n  CREATE_PRODUCT,\n} from '../../types/ProductType'\n\nconst initialState: ProductState = {\n  loading: false,\n  products: [],\n  inCart: [],\n  error: '',\n  counter: 0,\n  isValidated: false,\n}\n\nconst ProductReducers = (state = initialState, action: ProductActions) => {\n  switch (action.type) {\n  case FETCH_PRODUCT_REQUEST:\n    return {\n      ...state,\n      loading: true,\n    }\n  case FETCH_PRODUCT_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      products: action.payload,\n      error: '',\n    }\n  case FETCH_PRODUCT_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      products: [],\n      error: action.payload,\n    }\n  case ADD_PRODUCT: {\n    const { product } = action.payload\n    if (state.inCart.find((p) => p.name === product.name)) {\n      return state\n    }\n    return {\n      ...state,\n      inCart: [...state.inCart, product],\n      counter: state.counter + 1,\n    }\n  }\n  case REMOVE_PRODUCT: {\n    const { product } = action.payload\n    const index = state.inCart.findIndex((p) => p.name === product.name)\n    if (index >= 0) {\n      state.inCart.splice(index, 1)\n      return {\n        ...state,\n        inCart: [...state.inCart],\n        counter: state.counter - 1,\n      }\n    }\n    return state\n  }\n  case CREATE_PRODUCT: {\n    return {\n      ...state,\n      loading: false,\n      product: action.payload,\n      isValidated: true,\n      error: '',\n    }\n  }\n  default:\n    return state\n  }\n}\n\nexport default ProductReducers\n","import {\n  FETCH_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  FETCH_USER_FAILURE,\n  LOGIN_USER_SUCCESS,\n  FETCH_LOGIN_FAILURE,\n  UserActions,\n  UserState,\n  LOGOUT,\n  GET_USERS,\n} from '../../types/UserType'\n\nconst initialState: UserState = {\n  user: {},\n  users: [],\n  loading: false,\n  error: '',\n  isAuthenticated: false,\n  isValidated: false,\n}\n\nconst UserReducer = (state = initialState, action: UserActions) => {\n  switch (action.type) {\n  case FETCH_USER_REQUEST:\n    return {\n      ...state,\n      loading: true,\n      isAuthenticated: false,\n    }\n  case REGISTER_USER_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      user: action.payload,\n      isValidated: true,\n      error: '',\n    }\n  case FETCH_USER_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      user: [],\n      error: action.payload,\n      isAuthenticated: false,\n    }\n\n  case FETCH_LOGIN_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      user: [],\n      error: action.payload,\n      isAuthenticated: false,\n    }\n  case LOGIN_USER_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      user: action.payload,\n      isAuthenticated: true,\n      error: '',\n    }\n  case LOGOUT:\n    return {\n      ...state,\n      isAuthenticated: false,\n      user: null,\n      users: [],\n    }\n  case GET_USERS:\n    return {\n      ...state,\n      loading: false,\n      users: action.payload,\n      isAuthenticated: true,\n      error: '',\n    }\n\n  default:\n    return state\n  }\n}\n\nexport default UserReducer\n","import { combineReducers } from 'redux'\nimport ProductReducer from './Products/ProductReducer'\nimport UserReducer from './User/UserReducer'\n\nconst rootReducer = combineReducers({\n  products: ProductReducer,\n  user: UserReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport RootReducer from './RootReducer'\n\nconst temp = localStorage.getItem('reduxState')\nconst persistedState = temp ? JSON.parse(temp) : {}\n\nconst store = createStore(\n  RootReducer,\n  persistedState,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nexport default store\n","import React, { useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Product } from '../../types/ui'\nimport { addProduct } from '../../redux'\nimport { AppState } from '../../types'\nimport styles from './TableRow.module.css'\n\nconst TableRow = (product: Product) => {\n  const { name, price, img, _id } = product\n  const dispatch = useDispatch()\n  const user = useSelector((state: AppState) => state.user.user)\n  const isAuthenticated = useSelector(\n    (state: AppState) => state.user.isAuthenticated\n  )\n  const handleAddProduct = () => {\n    dispatch(addProduct(product))\n  }\n  const history = useHistory()\n  useEffect(() => {\n    if (!isAuthenticated && !user) {\n      history.push('/home')\n    }\n  }, [history, isAuthenticated, user])\n  return (\n    <Card raised color=\"black\">\n      <Image src={img} height={300} />\n\n      <Card.Content className={styles.Content}>\n        <Card.Header as={Link} to={`/product/${_id}`}>\n          {name}\n          <Card.Meta>\n            <Icon name=\"dollar\" />\n            {price}\n          </Card.Meta>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui buttons\">\n          <Button\n            as={Link}\n            to={`/product/${_id}`}\n            color=\"black\"\n            className={styles.viewbtn}\n          >\n\t\t\t\t\t\tView More\n          </Button>\n          {isAuthenticated && !user.user.user.isAdmin ? (\n            <Button color=\"yellow\" onClick={handleAddProduct}>\n\t\t\t\t\t\t\tAdd to Cart\n            </Button>\n          ) : null}\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default TableRow\n","import React from 'react'\nimport { Card, Icon } from 'semantic-ui-react'\nimport { useSelector } from 'react-redux'\n\nimport TableRow from '../TableRow'\nimport { Product } from '../../types/ui'\nimport { AppState } from '../../types'\nimport styles from './MainTable.module.css'\n\nconst MainTable = ({ products }: any) => {\n  const loading = useSelector((state: AppState) => state.products.loading)\n  return (\n    <div className={styles.Card}>\n      {loading ? (\n        <Icon loading size=\"huge\" color=\"teal\" name=\"spinner\" />\n      ) : products.error ? (\n        <h2>{products.error}</h2>\n      ) : (\n        <Card.Group itemsPerRow={4} stackable centered>\n          {products &&\n\t\t\t\t\t\tproducts.map((product: Product) => (\n\t\t\t\t\t\t  <TableRow\n\t\t\t\t\t\t    key={product._id}\n\t\t\t\t\t\t    _id={product._id}\n\t\t\t\t\t\t    name={product.name}\n\t\t\t\t\t\t    description={product.description}\n\t\t\t\t\t\t    categories={product.categories}\n\t\t\t\t\t\t    variants={product.variants}\n\t\t\t\t\t\t    sizes={product.sizes}\n\t\t\t\t\t\t    price={product.price}\n\t\t\t\t\t\t    img={product.img}\n\t\t\t\t\t\t  />\n\t\t\t\t\t\t))}\n        </Card.Group>\n      )}\n    </div>\n  )\n}\n\nexport default MainTable\n","import React from 'react'\nimport { Input } from 'semantic-ui-react'\n\nimport { SearchProps } from '../../types/ui'\n\nfunction Search({ handleChange, search }: SearchProps) {\n  return (\n    <Input\n      icon=\"search\"\n      placeholder=\"Search...\"\n      value={search}\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nimport styles from './Category.module.css'\n\nconst dropdownlist = ['men', 'women', 'kids']\n\nconst Category = ({ handleSelect, cat }: any) => {\n  return (\n    <Menu.Item>\n      <select\n        id=\"first\"\n        value={cat}\n        onChange={handleSelect}\n        onBlur={handleSelect}\n        disabled={!dropdownlist.length}\n        className={styles.select}\n      >\n        <option>Category</option>\n        {dropdownlist.map((item) => (\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    </Menu.Item>\n  )\n}\n\nexport default Category\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Icon, Button, Menu } from 'semantic-ui-react'\n\nimport { logout } from '../../../redux/User/UserActions'\n\nfunction Logout() {\n  const dispatch = useDispatch()\n  let userDetails = JSON.parse(localStorage.getItem('user') || '{}')\n  const logoutOnClick = () => {\n    dispatch(logout())\n    localStorage.clear()\n  }\n  return (\n    <>\n      <Menu.Item>\n        {userDetails.firstName} {userDetails.lastName}\n        <Icon name=\"user circle\" size=\"large\" style={{ paddingLeft: '10px' }} />\n      </Menu.Item>\n      <Button color=\"black\" name=\"logout\" onClick={logoutOnClick}>\n        <Icon name=\"sign out\"> </Icon>Logout\n      </Button>\n    </>\n  )\n}\n\nexport default Logout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Modal,\n} from 'semantic-ui-react'\n\nimport { AppState } from '../../../types'\nimport { login } from '../../../redux/User/UserActions'\nimport styles from './Login.module.css'\n\nconst ErrorText = {\n  color: 'red',\n}\n\nconst Login = ({ setLogInOpen, setRegisterOpen, loginOpen }: any) => {\n  const errorMessage = useSelector(\n    (state: AppState) => state.user.error.message\n  )\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    setRegisterOpen(true)\n    setLogInOpen(false)\n  }\n  return (\n    <Modal\n      size=\"tiny\"\n      onClose={() => setLogInOpen(false)}\n      onOpen={() => setLogInOpen(true)}\n      open={loginOpen}\n      className={styles.modal}\n      trigger={\n        <Button color=\"black\" name=\"login\">\n          <Icon name=\"sign in\" color=\"teal\"></Icon>\n\t\t\t\t\tSign In\n        </Button>\n      }\n    >\n      <Grid\n        textAlign=\"center\"\n        style={{ height: '70vh' }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image src=\"https://thumbs.dreamstime.com/z/vector-illustration-isolated-white-background-login-button-icon-126999949.jpg\" />\n\t\t\t\t\t\tLog-in to your account\n          </Header>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validationSchema={yup.object({\n              email: yup\n                .string()\n                .email('invalid email address')\n                .required('required field'),\n              password: yup\n                .string()\n                .max(45, 'must be 25 characters or less')\n                .required('required field'),\n            })}\n            onSubmit={(values, { resetForm }) => {\n              JSON.stringify(values, null, 2)\n              dispatch(login(values))\n              resetForm()\n            }}\n          >\n            {({ handleSubmit, errors }) => (\n              <Form size=\"large\" onSubmit={handleSubmit}>\n                <Segment stacked>\n                  <Field\n                    fluid\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"E-mail address\"\n                    name=\"email\"\n                    as={Form.Input}\n                  />\n                  {errors.email && <div style={ErrorText}>{errors.email}</div>}\n                  <Field\n                    fluid\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    as={Form.Input}\n                  />\n                  {errors.password && (\n                    <div style={ErrorText}>{errors.password}</div>\n                  )}\n                  <Button color=\"teal\" fluid size=\"large\">\n\t\t\t\t\t\t\t\t\t\tLogin\n                  </Button>\n                </Segment>\n              </Form>\n            )}\n          </Formik>\n          <Modal.Actions>\n            {errorMessage && <Message color=\"red\"> {errorMessage}</Message>}\n\n            <Message onClick={handleClick}>\n\t\t\t\t\t\t\tNew to us?\n              <span style={{ cursor: 'pointer', textDecoration: 'underline ' }}>\n\t\t\t\t\t\t\t\tRegister\n              </span>\n            </Message>\n          </Modal.Actions>\n        </Grid.Column>\n      </Grid>\n    </Modal>\n  )\n}\nexport default Login\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Form,\n  Segment,\n  Grid,\n  Button,\n  Icon,\n  Header,\n  Modal,\n  Message,\n} from 'semantic-ui-react'\n\nimport { AppState } from '../../../types'\nimport { UserRegister } from '../../../redux/User/UserActions'\nimport styles from './Register.module.css'\n\nconst ErrorText = {\n  color: 'red',\n}\n\nconst Register = ({ setLogInOpen, setRegisterOpen, registerOpen }: any) => {\n  const isValidated = useSelector((state: AppState) => state.user.isValidated)\n  const errorMessage = useSelector(\n    (state: AppState) => state.user.error.message\n  )\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const handleClick = () => {\n    setLogInOpen(true)\n    setRegisterOpen(false)\n  }\n\n  useEffect(() => {\n    if (isValidated) {\n      history.push('/home')\n    }\n  }, [history, isValidated])\n\n  return (\n    <Modal\n      size=\"tiny\"\n      onClose={() => setRegisterOpen(false)}\n      onOpen={() => setRegisterOpen(true)}\n      open={registerOpen}\n      className={styles.modal}\n      trigger={\n        <Button color=\"black\" name=\"register\">\n          <Icon name=\"signup\"> </Icon>Register\n        </Button>\n      }\n    >\n      <Grid centered style={{ height: '90vh' }} verticalAlign=\"middle\">\n        <Grid.Column>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n\t\t\t\t\t\tCreate an Account\n          </Header>\n          <Segment>\n            <Formik\n              initialValues={{\n                firstName: '',\n                lastName: '',\n                username: '',\n                email: '',\n                password: '',\n                repeatPassword: '',\n              }}\n              validationSchema={yup.object({\n                firstName: yup\n                  .string()\n                  .min(3, 'must be at least 3 character')\n                  .max(20, 'firstname must between 3 and 20 characters')\n                  .required('required field'),\n                lastName: yup\n                  .string()\n                  .min(3, 'must be at least 3 character')\n                  .max(25, 'lastname must between 3 and 20 characters')\n                  .required('required field'),\n                email: yup\n                  .string()\n                  .email('invalid email address')\n                  .required('required field'),\n                password: yup\n                  .string()\n                  .min(3, 'must be at least 3 character')\n                  .max(25, 'password must between 3 and 20 characters')\n                  .required('Password is required'),\n                repeatPassword: yup\n                  .string()\n                  .test('passwords-match', 'Passwords must match', function (\n                    value\n                  ) {\n                    return this.parent.password === value\n                  }),\n              })}\n              onSubmit={(values, { resetForm }) => {\n                dispatch(UserRegister(values))\n                resetForm()\n              }}\n            >\n              {({ handleSubmit, errors }) => (\n                <Form onSubmit={handleSubmit}>\n                  <Form.Field>\n                    <Field\n                      name=\"firstName\"\n                      placeholder=\"First Name\"\n                      label=\"First Name\"\n                      as={Form.Input}\n                    />\n                    {errors.firstName && (\n                      <div style={ErrorText}>{errors.firstName}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"lastName\"\n                      placeholder=\"Last Name\"\n                      label=\"Last Name\"\n                      as={Form.Input}\n                    />\n                    {errors.lastName && (\n                      <div style={ErrorText}>{errors.lastName}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                      as={Form.Input}\n                    />\n                    {errors.email && (\n                      <div style={ErrorText}>{errors.email}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      label=\"Password\"\n                      as={Form.Input}\n                    />\n                    {errors.password && (\n                      <div style={ErrorText}>{errors.password}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      type=\"password\"\n                      name=\"repeatPassword\"\n                      placeholder=\"Repeat Password\"\n                      label=\"Repeat Password\"\n                      as={Form.Input}\n                    />\n                    {errors.repeatPassword && (\n                      <div style={ErrorText}>{errors.repeatPassword}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Button fluid color=\"teal\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tSubmit\n                  </Form.Button>\n                </Form>\n              )}\n            </Formik>\n            <Modal.Actions>\n              {errorMessage && <Message color=\"red\"> {errorMessage}</Message>}\n              <Message onClick={handleClick}>\n\t\t\t\t\t\t\t\tAlready have an account?\n                <span\n                  style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                >\n\t\t\t\t\t\t\t\t\tLogin\n                </span>\n              </Message>\n            </Modal.Actions>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Modal>\n  )\n}\n\nexport default Register\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport { Form, Segment, Grid, Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { CreateNewProduct } from '../../redux/Products/ProductActions'\nimport styles from './AddProduct.module.css'\n\nconst HeaderStyle = {\n  textAlign: 'center',\n  paddingTop: '10px',\n  color: 'teal',\n  fontSize: '30px',\n}\n\nconst AddProduct = () => {\n  const [open, setOpen] = useState(false)\n  const dispatch = useDispatch()\n\n  return (\n    <Modal\n      size=\"tiny\"\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      className={styles.modal}\n      trigger={\n        <Button color=\"black\" name=\"Create a Product\">\n          <Icon name=\"add circle\" color=\"teal\"></Icon>\n\t\t\t\t\tAdd Product\n        </Button>\n      }\n    >\n      <Grid centered>\n        <Grid.Column>\n          <Modal.Header as=\"h3\" style={HeaderStyle}>\n\t\t\t\t\t\tCreate a Product\n          </Modal.Header>\n          <Segment>\n            <Formik\n              initialValues={{\n                name: '',\n                description: '',\n                categories: [],\n                sizes: [0],\n                variants: [],\n                img: '',\n                price: 0,\n                _id: '',\n              }}\n              validationSchema={yup.object({\n                name: yup\n                  .string()\n                  .max(20, 'too long')\n                  .required('required field'),\n                description: yup\n                  .string()\n                  .min(5, 'too short')\n                  .max(25, 'too long')\n                  .required('required field'),\n                img: yup.string().required('required field'),\n                categories: yup.string().required(),\n                variants: yup.string().required(),\n                sizes: yup.number().required().positive().integer(),\n                price: yup.number().required().positive().integer(),\n              })}\n              onSubmit={(values, { resetForm }) => {\n                dispatch(CreateNewProduct(values))\n                console.log(values)\n                resetForm()\n              }}\n            >\n              {({ handleSubmit, errors }) => (\n                <Form onSubmit={handleSubmit}>\n                  <Form.Field>\n                    <Field\n                      name=\"name\"\n                      placeholder=\"Product name\"\n                      label=\"Product Name\"\n                      as={Form.Input}\n                    />\n                    {errors.name && <div id=\"feedback\">{errors.name}</div>}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"description\"\n                      placeholder=\"Product description\"\n                      label=\"Product description\"\n                      as={Form.Input}\n                    />\n                    {errors.description && (\n                      <div id=\"feedback\">{errors.description}</div>\n                    )}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"img\"\n                      placeholder=\"Image\"\n                      label=\"Image\"\n                      as={Form.Input}\n                    />\n                    {errors.img && <div>{errors.img}</div>}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      type=\"number\"\n                      name=\"price\"\n                      placeholder=\"price\"\n                      label=\"price\"\n                      as={Form.Input}\n                    />\n                    {errors.price && <div>{errors.price}</div>}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"categories\"\n                      placeholder=\"categories\"\n                      label=\"categories\"\n                      as={Form.Input}\n                    />\n                    {errors.categories && <div>{errors.categories}</div>}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"variants\"\n                      placeholder=\"variants\"\n                      label=\"variants\"\n                      as={Form.Input}\n                    />\n                    {errors.variants && <div>{errors.variants}</div>}\n                  </Form.Field>\n                  <Form.Field>\n                    <Field\n                      name=\"sizes\"\n                      placeholder=\"sizes\"\n                      label=\"sizes\"\n                      as={Form.Input}\n                    />\n                    {errors.sizes && <div>{errors.sizes}</div>}\n                  </Form.Field>\n                  <Form.Button fluid color=\"teal\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\tCreate\n                  </Form.Button>\n                </Form>\n              )}\n            </Formik>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Modal>\n  )\n}\n\nexport default AddProduct\n","import React, { useState, useEffect } from 'react'\nimport { Menu, Icon, Button, Header } from 'semantic-ui-react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from '../../types'\nimport { HeaderProps } from '../../types/ui'\nimport Search from '../Search'\nimport styles from './Navbar.module.css'\nimport Category from '../Category'\nimport Logout from '../user/Logout'\nimport Login from '../user/Login'\nimport Register from '../user/Register'\nimport AddProduct from '../AddProduct'\n\nfunction Navbar({ handleChange, handleSelect, search, cat }: HeaderProps) {\n\tconst [loginOpen, setLogInOpen] = useState<boolean>(false)\n\tconst [registerOpen, setRegisterOpen] = useState<boolean>(false)\n\tconst history = useHistory()\n\tconst counter = useSelector((state: AppState) => state.products.counter)\n\tconst user = useSelector((state: AppState) => state.user.user)\n\n\tconst isAuthenticated = useSelector(\n\t\t(state: AppState) => state.user.isAuthenticated\n\t)\n\n\tuseEffect(() => {\n\t\tif (!isAuthenticated && !user) {\n\t\t\thistory.push('/home')\n\t\t}\n\t}, [history, isAuthenticated, user])\n\n\treturn (\n\t\t<Menu inverted size=\"large\" fixed=\"top\" stackable>\n\t\t\t<Menu.Item as={Link} to=\"/home\" name=\"home\">\n\t\t\t\t<Header as=\"h1\" inverted color=\"yellow\" className={styles.header}>\n\t\t\t\t\tShoes\n\t\t\t\t</Header>\n\t\t\t</Menu.Item>\n\t\t\t<Category handleSelect={handleSelect} cat={cat} />\n\t\t\t<Menu.Menu position=\"right\">\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Search search={search} handleChange={handleChange} />\n\t\t\t\t</Menu.Item>\n\t\t\t\t{isAuthenticated && user.user.user.isAdmin ? (\n\t\t\t\t\t<Menu.Item as={Link} to=\"profile\">\n\t\t\t\t\t\t<Button color=\"black\">Users</Button>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t) : null}\n\t\t\t\t{isAuthenticated && user && user.user.user.isAdmin ? (\n\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t<AddProduct />\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t) : null}\n\n\t\t\t\t{!isAuthenticated ? (\n\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\tsetRegisterOpen={setRegisterOpen}\n\t\t\t\t\t\t\tloginOpen={loginOpen}\n\t\t\t\t\t\t\tsetLogInOpen={setLogInOpen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Register\n\t\t\t\t\t\t\tregisterOpen={registerOpen}\n\t\t\t\t\t\t\tsetRegisterOpen={setRegisterOpen}\n\t\t\t\t\t\t\tsetLogInOpen={setLogInOpen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t) : (\n\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t<Logout />\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t)}\n\n\t\t\t\t{isAuthenticated && user && !user.user.user.isAdmin ? (\n\t\t\t\t\t<Menu.Item as={Link} to=\"cart\">\n\t\t\t\t\t\t<Button animated=\"vertical\" color=\"black\">\n\t\t\t\t\t\t\t<Button.Content hidden>Shop</Button.Content>\n\t\t\t\t\t\t\t<Button.Content visible>\n\t\t\t\t\t\t\t\t<Icon name=\"shopping cart\" size=\"large\">\n\t\t\t\t\t\t\t\t\t<div className={styles.Counter}>{counter}</div>\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Button.Content>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t) : null}\n\t\t\t</Menu.Menu>\n\t\t</Menu>\n\t)\n}\n\nexport default Navbar\n","import React, { useState } from 'react'\nimport { Container } from 'semantic-ui-react'\n\nimport MainTable from '../../components/MainTable'\nimport Navbar from '../../components/Navbar'\nimport { useProduct } from '../../Hooks/useProduct'\n\nexport const Home = () => {\n  const [query, setQuery] = useState<string>('')\n  const [cat, setCat] = useState<string>('')\n  const [data] = useProduct(query, cat)\n\n  const handleChange: React.ReactEventHandler<HTMLInputElement> = (e) => {\n    setQuery(e.currentTarget.value)\n  }\n\n  const handleSelect: React.ReactEventHandler<HTMLInputElement> = (e) => {\n    setCat(e.currentTarget.value)\n  }\n\n  return (\n    <Container>\n      <Navbar\n        handleChange={handleChange}\n        search={query}\n        product={data}\n        handleSelect={handleSelect}\n        cat={cat}\n      />\n      <MainTable products={data} />\n    </Container>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { fetchProducts } from '../redux/Products/ProductActions'\nimport { Product } from '../types/ProductType'\nimport { AppState } from '../types/'\n\nexport const useProduct = (query: string, cat: string) => {\n  const [data, setData] = useState<Product[]>([])\n  const dispatch = useDispatch()\n  const products = useSelector((state: AppState) => state.products.products)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (cat === 'Category') {\n      const sorted = [...products].filter((product: Product) =>\n        product.name.toLowerCase().includes(query.toLowerCase())\n      )\n      setData(sorted)\n    } else {\n      const sorted = [...products].filter((product: Product) =>\n        product.name.toLowerCase().includes(query.toLowerCase())\n      )\n      const selected = [...sorted].filter((product: Product) =>\n        product.categories[0].toLowerCase().includes(cat.toLowerCase())\n      )\n\n      setData(selected)\n    }\n  }, [query, products, cat])\n\n  return [data]\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\n\nimport { addProduct } from '../../redux'\nimport { ViewProductProps } from '../../types/ui'\nimport styles from './ViewProduct.module.css'\n\nfunction ViewProduct({ product }: ViewProductProps) {\n  const { name, description, img, price, categories } = product\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  function handleClick() {\n    if (!history) {\n      return <div>No country</div>\n    } else {\n      history.push('/home')\n    }\n  }\n\n  const handleAddProduct = () => {\n    dispatch(addProduct(product))\n  }\n\n  return (\n    <>\n      <Card.Group itemsPerRow={4} style={{ margin: 0, top: 0 }}>\n        <Button color=\"blue\" onClick={handleClick}>\n          <Icon name=\"arrow left\"> </Icon>\n        </Button>\n      </Card.Group>\n      <Card.Group itemsPerRow={4} centered className={styles.card}>\n        <Card>\n          <Image src={img} alt=\"product\" height={300} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Meta>\n              <span className=\"date\">{categories}</span>\n            </Card.Meta>\n            <Card.Description>{description}</Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name=\"dollar\" />\n            {price}\n          </Card.Content>\n          <Card.Content extra>\n            <div className=\"ui two buttons\">\n              <Button color=\"yellow\" onClick={handleAddProduct}>\n\t\t\t\t\t\t\t\tAdd to Basket\n              </Button>\n            </div>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </>\n  )\n}\n\nexport default ViewProduct\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport ViewProduct from '../../components/ViewProduct'\nimport styles from './SingleProduct.module.css'\n\nconst SingleProduct = () => {\n  const { id } = useParams<any>()\n\n  const products = useSelector((state: any) =>\n    state.products.products.find((product: any) => product._id === id)\n  )\n\n  if (!products) {\n    return <div>No product</div>\n  }\n  return (\n    <div>\n      <div className={styles.card}>\n        <ViewProduct product={products} />\n      </div>\n    </div>\n  )\n}\nexport default SingleProduct\n","import React from 'react'\nimport { Icon, Button, Container, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\n/* import styles from \"./FirstPage.module.css\"\n */\n\nconst styles = {\n  backgroundImage: `url(https://source.unsplash.com/user/erondu/7rDNSLMKiuc)`,\n  backgroundPosition: 'center 40%',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  minWidth: '100vw',\n  minHeight: '100vh',\n}\n\nfunction StartPage() {\n  return (\n    <div style={styles}>\n      <Container text>\n        <Header\n          as=\"h1\"\n          content=\"E-Commerce\"\n          inverted\n          style={{\n            fontSize: '4em',\n            fontWeight: 'normal',\n          }}\n        ></Header>\n\n        <Button\n          as={Link}\n          to=\"/home\"\n          primary\n          size=\"huge\"\n          style={{\n            marginTop: '4em',\n          }}\n        >\n\t\t\t\t\tGet Started\n          <Icon name=\"arrow right\"> </Icon>\n        </Button>\n      </Container>\n    </div>\n  )\n}\n\nexport default StartPage\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\n\nimport { CartItemProps } from '../../types/ui'\nimport { removeProduct } from '../../redux'\n\nconst CardStyle = {\n  display: 'inline-block',\n  marginLeft: '10px',\n}\n\nfunction CartItem({ cart }: CartItemProps) {\n  const { name, description, img, price } = cart\n\n  const dispatch = useDispatch()\n\n  const handleRemoveProd = () => {\n    dispatch(removeProduct(cart))\n  }\n\n  return (\n    <Card.Group style={CardStyle} centered>\n      <Card>\n        <Image src={img} alt=\"product\" height={300} />\n        <Card.Content>\n          <Card.Header>{name}</Card.Header>\n          <Card.Description>{description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"dollar\" />\n          {price}\n        </Card.Content>\n        <Card.Content extra>\n          <div className=\"ui two buttons\">\n            <Button color=\"red\" onClick={handleRemoveProd}>\n\t\t\t\t\t\t\tremove\n            </Button>\n            <Button color=\"green\" onClick={handleRemoveProd}>\n\t\t\t\t\t\t\tBuy\n            </Button>\n          </div>\n        </Card.Content>\n      </Card>\n    </Card.Group>\n  )\n}\n\nexport default CartItem\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Icon, Button, Card, Header } from 'semantic-ui-react'\n\nimport { AppState } from '../../types'\nimport CartItem from '../../components/CartItem'\nimport styles from './ProductCart.module.css'\n\nfunction ProductCart() {\n  const cartProduct = useSelector((state: AppState) => state.products.inCart)\n  const history = useHistory()\n\n  function handleClick() {\n    if (!history) {\n      return <div>No country</div>\n    } else {\n      history.push('/home')\n    }\n  }\n\n  return (\n    <>\n      <Card.Group itemsPerRow={4} style={{ margin: 0 }}>\n        <Button primary onClick={handleClick}>\n          <Icon name=\"arrow left\"> </Icon>\n        </Button>\n      </Card.Group>\n      {cartProduct.length > 0 ? (\n        <div className={styles.card}>\n          {cartProduct &&\n\t\t\t\t\t\tcartProduct.map((cart) => {\n\t\t\t\t\t\t  return <CartItem key={cart._id} cart={cart} />\n\t\t\t\t\t\t})}\n        </div>\n      ) : (\n        <Header as=\"h1\" inverted color=\"yellow\" className={styles.infoText}>\n\t\t\t\t\tcart is empty\n        </Header>\n      )}\n    </>\n  )\n}\n\nexport default ProductCart\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { UserProps } from '../../types/UserType'\nfunction Users({ user }: UserProps) {\n  const history = useHistory()\n  useEffect(() => {\n    if (!user) {\n      history.push('/home')\n    }\n  }, [history, user])\n\n  const { firstName, lastName, email, cart } = user\n\n  return (\n    <ul>\n      <li>firstName: {firstName}</li>\n      <li>lastName: {lastName}</li>\n      <li>email: {email}</li>\n      <li>\n        {!cart.length ? (\n          <div>cart is empty</div>\n        ) : (\n          cart.map((shoes: any) => (\n            <div>\n\t\t\t\t\t\t\tname: {shoes.name}\n              <br />\n\t\t\t\t\t\t\tprice: {shoes.price}\n            </div>\n          ))\n        )}\n      </li>\n    </ul>\n  )\n}\n\nexport default Users\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getUsers } from '../redux/User/UserActions'\nimport { User } from '../types/UserType'\nimport { AppState } from '../types/'\n\nexport const useUsers = () => {\n  const [userData, setUserData] = useState<User[]>([])\n  const users = useSelector((state: AppState) => state.user.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getUsers())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserData(users)\n  }, [users])\n\n  return [userData]\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Card, Icon, Button } from 'semantic-ui-react'\n\nimport { useUsers } from '../../Hooks/useUsers'\nimport Users from '../../components/Users'\n\nfunction Profile() {\n  const [users] = useUsers()\n  const history = useHistory()\n\n  function handleClick() {\n    if (!history) {\n      return <div>No country</div>\n    } else {\n      history.push('/home')\n    }\n  }\n\n  return (\n    <div>\n      <Card.Group itemsPerRow={4} style={{ margin: 0, top: 0 }}>\n        <Button color=\"blue\" onClick={handleClick}>\n          <Icon name=\"arrow left\"> </Icon>\n        </Button>\n      </Card.Group>\n      {users && users.map((item) => <Users key={item._id} user={item}></Users>)}\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { Home } from '../pages/Home'\nimport SingleProduct from '../pages/SingleProduct'\nimport Login from '../components/user/Login'\nimport Register from '../components/user/Register'\nimport StartPage from '../components/StartPage'\nimport ProductCart from '../pages/ProductCart'\nimport AddProduct from '../components/AddProduct'\nimport Users from '../components/Users'\nimport Profile from '../pages/Profile'\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={StartPage} />\n    <Route path=\"/home\" component={Home} />\n    <Route path=\"/product/:id\" component={SingleProduct} />\n    <Route path=\"/login\" component={Login} />\n    <Route path=\"/register\" component={Register} />\n    <Route path=\"/cart\" component={ProductCart} />\n    <Route path=\"/AddProduct\" component={AddProduct} />\n    <Route path=\"/users\" component={Users} />\n    <Route path=\"/profile\" component={Profile} />\n  </Switch>\n)\n\nexport default Routes\n","import React from 'react'\n\nimport Routes from './Routes'\nimport styles from './App.module.css'\n\nexport default function App() {\n  return (\n    <div className={styles.App}>\n      <Routes />\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst WithProvider = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(<WithProvider />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}